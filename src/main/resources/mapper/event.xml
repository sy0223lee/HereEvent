<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.hereevent.event">
    <select id="insertEvent" parameterType="event">
        insert into event(name,start_date,end_date,addr,info,homepage,sns,type,reserve_limit,wait_limit)
        value(#{name},#{start_date},#{end_date},#{addr},#{info},#{homepage},#{sns},#{type},#{reserve_limit},#{wait_limit})
    </select>
    <select id="deleteEvent" parameterType="String">
        delete from event where event_no = #{event_no}
    </select>
    <select id="updateEvent" parameterType="event">
        UPDATE event
        set name = #{name}, start_date = #{start_date}, end_date = #{end_date},
        addr = #{addr}, info = #{info}, reserve_limit = #{reserve_limit},wait_limit = #{wait_limit}
        WHERE event_no = #{event_no}
    </select>
    <select id="searchEvent" parameterType="String" resultType="event">
        SELECT *
        FROM event
        WHERE name Like CONCAT('%' , #{name} , '%')
    </select>
    <select id="getAllEvent" resultType="event">
        SELECT *
        FROM event
    </select>
    <select id="getOpenEvent" resultType="event">
        SELECT event_no, category_no, name, start_date, end_date, addr, info, homepage, sns, img_path, type, reserve_limit, wait_limit
        FROM event
        WHERE start_date > now()
        ORDER BY start_date
    </select>
    <select id="getPopularEvent" resultType="event">
        SELECT e.event_no,e.name,e.start_date,e.end_date,e.addr, e.img_path,
        COUNT(DISTINCT r.member_no) + COUNT(DISTINCT w.email) AS total_count
        FROM event e
        LEFT JOIN reserve r ON e.event_no = r.event_no
        LEFT JOIN wait w ON e.event_no = w.event_no
        GROUP BY e.event_no
        ORDER BY total_count desc limit 10
    </select>

    <select id="getEventDetails" resultType="event">
        SELECT event_no, category_no, name, start_date, end_date,addr, info, homepage, sns, img_path, type, reserve_limit, wait_limit
        FROM event
        WHERE event_no = #{event_no}
    </select>
    <select id="getEventDetailsWithInterest" parameterType="Map" resultType="event">
        with
        e as (select * from event where event_no = #{event_no}),
        i as (select * from event_interest where member_no = #{member_no})
        select e.*, i.event_interest_no
        from e left join i on e.event_no = i.event_no
    </select>
    <!--  event photo 가져오기  -->
    <select id="getEventImage" resultType="event">
        SELECT event_no, image_path
        FROM events
        WHERE event_no = #{eventNo}
    </select>

    <!-- 크롤링 -->
	<insert id="insertCrawlingEvent" parameterType="event">
		insert into event  (name, start_date, end_date, addr, info, homepage, sns)
		select #{name}, #{start_date}, #{end_date}, #{addr}, #{info}, #{homepage}, #{sns}
		from dual where not exists (
			select event_no
			from event
			where name=#{name} and start_date=#{start_date} and end_date=#{end_date})
	</insert>
	<select id="selectEventNoByEventName" parameterType="String" resultType="String">
		select event_no
		from event
		where name=#{name}
	</select>
    <update id="updateEventImg" parameterType="Map">
        update event
        set img_path = #{img_path}
        where event_no = #{event_no}
    </update>

    <!--카테고리별 이벤트 조회-->
    <select id="selectEventByCategory" resultType="event">
        select *
        from event
        where category_no=#{category_no}
    </select>
    <!--카테고리별 이벤트 4개씩 조회-->
    <select id="fourEventByCategory" resultType="event">
        SELECT *
        FROM event
        WHERE category_no =#{category_no} AND end_date > NOW()
        LIMIT 4
    </select>
    <!--별점순 이벤트 조회-->
    <select id="getEventByStarRank" resultType="event">
        SELECT e.event_no, e.name, e.img_path, AVG(r.star) AS avg_star
        FROM event AS e
        JOIN review AS r
        ON e.event_no = r.event_no
        GROUP BY e.event_no
        ORDER BY avg_star DESC limit 10
    </select>
    <!--예약하기-->
    <insert id="insertReserve" parameterType="reserve">
        insert into reserve (event_no,member_no, reserve_date, reserve_time,state,reserve_order)
        values(#{event_no},#{member_no},#{reserve_date},#{reserve_time},"예약완료",#{reserve_order})
    </insert>
    <!--예약 순서 체크-->
    <select id="checkReserve" parameterType="Map" resultType="reserve">
        select * from reserve
        where event_no=#{event_no} AND reserve_date=#{reserve_date} AND reserve_time=#{reserve_time}
        ORDER BY reserve_order DESC limit 1
    </select>
    <!--예약 인원 체크-->
    <select id="checkLimit" resultType="Integer">
        select count(*) from reserve
        where event_no=#{event_no}
    </select>
    
    <!-- 관심 이벤트 등록, 해제 -->
    <insert id="insertEventInterest" parameterType="Map">
        insert into event_interest (event_no, member_no) value
        (#{event_no}, #{member_no})
    </insert>
    <delete id="deleteEventInterest" parameterType="Map">
        delete from event_interest
        where event_no = #{event_no} and member_no = #{member_no}
    </delete>

    <!-- 관심 이벤트 조회 -->
    <select id="selectEventInterestByMemberNo" resultType="eventInterest">
        select i.*, e.name, e.start_date, e.end_date, e.addr, e.img_path
        from event e inner join event_interest i on e.event_no = i.event_no
        where i.member_no = #{member_no}
    </select>
</mapper>